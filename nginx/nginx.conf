worker_processes  1;

events {
    worker_connections  1024;
}

http {
    log_format log_req_resp '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" $request_time req_body:"$request_body" headers:"$http_my_header" resp_body:"$resp_body"';

    lua_package_path 'conf/?.lua;;';

    server {
        listen       80;
        server_name  localhost;

	access_log logs/access.log log_req_resp;

        lua_need_request_body on;

        set $resp_body "";
        body_filter_by_lua '
            local resp_body = string.sub(ngx.arg[1], 1, 1000)
            ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
            if ngx.arg[2] then
                ngx.var.resp_body = ngx.ctx.buffered
            end
        ';

        location = /luarocks {
            content_by_lua '
		ngx.say("Hello, world!")
            ';
        }
    }
}
